{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"https://www.pre-onboarding-selection-task.shop\";\n/** 인증이 필요하지 않은 API */\n\nconst baseApi = (url, options) => {\n  const instance = axios.create({\n    baseURL: url,\n    ...options\n  });\n  instance.interceptors.response.use(response => response, error => {\n    var _error$response;\n\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      console.log(\"Not Found\");\n    }\n\n    return Promise.reject(error);\n  });\n  return instance;\n};\n\nexport const authApi = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nauthApi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\nexport const baseInstance = baseApi(BASE_URL);","map":{"version":3,"names":["axios","BASE_URL","baseApi","url","options","instance","create","baseURL","interceptors","response","use","error","status","console","log","Promise","reject","authApi","headers","request","config","token","localStorage","getItem","Authorization","baseInstance"],"sources":["C:/Users/lnr99/Documents/wanted-pre-onboarding-frontend/src/apis/utils.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://www.pre-onboarding-selection-task.shop\";\r\n\r\n/** 인증이 필요하지 않은 API */\r\nconst baseApi = (url, options) => {\r\n  const instance = axios.create({ baseURL: url, ...options });\r\n\r\n  instance.interceptors.response.use((response) => response, (error) => {\r\n    if (error.response?.status === 401) {\r\n      console.log(\"Not Found\");\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n  return instance;\r\n};\r\n\r\nexport const authApi = axios.create({\r\n    baseURL: BASE_URL,\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\nauthApi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n})\r\n\r\nexport const baseInstance = baseApi(BASE_URL);"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,gDAAjB;AAEA;;AACA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;EAChC,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa;IAAEC,OAAO,EAAEJ,GAAX;IAAgB,GAAGC;EAAnB,CAAb,CAAjB;EAEAC,QAAQ,CAACG,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAoCD,QAAD,IAAcA,QAAjD,EAA4DE,KAAD,IAAW;IAAA;;IACpE,IAAI,oBAAAA,KAAK,CAACF,QAAN,oEAAgBG,MAAhB,MAA2B,GAA/B,EAAoC;MAClCC,OAAO,CAACC,GAAR,CAAY,WAAZ;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;EACD,CALD;EAMA,OAAON,QAAP;AACD,CAVD;;AAYA,OAAO,MAAMY,OAAO,GAAGjB,KAAK,CAACM,MAAN,CAAa;EAChCC,OAAO,EAAEN,QADuB;EAEhCiB,OAAO,EAAE;IACP,+BAA+B,GADxB;IAEP,gBAAgB;EAFT;AAFuB,CAAb,CAAhB;AAQPD,OAAO,CAACT,YAAR,CAAqBW,OAArB,CAA6BT,GAA7B,CAAkCU,MAAD,IAAY;EAC3C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;EACA,IAAIF,KAAJ,EAAW;IACTD,MAAM,CAACF,OAAP,CAAeM,aAAf,GAAgC,UAASH,KAAM,EAA/C;EACD;;EACD,OAAOD,MAAP;AACD,CAND;AAQA,OAAO,MAAMK,YAAY,GAAGvB,OAAO,CAACD,QAAD,CAA5B"},"metadata":{},"sourceType":"module"}