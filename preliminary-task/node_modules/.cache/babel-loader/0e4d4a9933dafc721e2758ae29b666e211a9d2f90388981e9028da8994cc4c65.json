{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"https://www.pre-onboarding-selection-task.shop\";\nconst baseApi = (url, options) => {\n  const instance = axios.create({\n    baseURL: url,\n    ...options\n  });\n  instance.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      console.log(\"Not Found\");\n    }\n    return Promise.reject(error);\n  });\n  return instance;\n};\nexport const authApi = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nauthApi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const baseInstance = baseApi(BASE_URL);","map":{"version":3,"names":["axios","BASE_URL","baseApi","url","options","instance","create","baseURL","interceptors","response","use","error","_error$response","status","console","log","Promise","reject","authApi","headers","request","config","token","localStorage","getItem","Authorization","baseInstance"],"sources":["/Users/naryeong/Documents/wanted-pre-onboarding-frontend/preliminary-task/src/apis/utils.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://www.pre-onboarding-selection-task.shop\";\r\n\r\nconst baseApi = (url, options) => {\r\n  const instance = axios.create({ baseURL: url, ...options });\r\n\r\n  instance.interceptors.response.use((response) => response, (error) => {\r\n    if (error.response?.status === 401) {\r\n      console.log(\"Not Found\");\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n  return instance;\r\n};\r\n\r\nexport const authApi = axios.create({\r\n    baseURL: BASE_URL,\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\nauthApi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n})\r\n\r\nexport const baseInstance = baseApi(BASE_URL);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,gDAAgD;AAEjE,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;EAChC,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAC;IAAEC,OAAO,EAAEJ,GAAG;IAAE,GAAGC;EAAQ,CAAC,CAAC;EAE3DC,QAAQ,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAED,QAAQ,IAAKA,QAAQ,EAAGE,KAAK,IAAK;IAAA,IAAAC,eAAA;IACpE,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;MAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B;IACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;EAC9B,CAAC,CAAC;EACF,OAAON,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMa,OAAO,GAAGlB,KAAK,CAACM,MAAM,CAAC;EAChCC,OAAO,EAAEN,QAAQ;EACjBkB,OAAO,EAAE;IACP,6BAA6B,EAAE,GAAG;IAClC,cAAc,EAAE;EAClB;AACJ,CAAC,CAAC;AAEFD,OAAO,CAACV,YAAY,CAACY,OAAO,CAACV,GAAG,CAAEW,MAAM,IAAK;EAC3C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACF,OAAO,CAACM,aAAa,GAAI,UAASH,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,YAAY,GAAGxB,OAAO,CAACD,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}